# ================================
# Python + JavaScript .gitignore
# ================================

# ----------------
# Python
# ----------------

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# ----------------
# JavaScript / Node.js
# ----------------

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test
.env.production

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and *not* Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# ----------------
# Babel Specific
# ----------------

# Babel transpiled files
lib/
dist/
build/

# Babel cache
.babel-cache/
babel-cache/

# Compiled output from Babel
**/*.compiled.js
**/*.transpiled.js

# ----------------
# Build Tools & Bundlers
# ----------------

# Webpack
webpack-stats.json
webpack.config.js.map

# Rollup
rollup.config.js.map

# Vite
dist/
.vite/

# ESBuild
.esbuild/

# ----------------
# Editors & IDEs
# ----------------

# VSCode
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ----------------
# OS Generated Files
# ----------------

# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Linux
*~

# ----------------
# Project Specific
# ----------------

# Executable files (if you have Python scripts made executable)
*.exe
*.dmg
*.pkg
*.deb
*.rpm

# Parser generated files
parser_output/
parsed_files/
ast_output/

# Temporary files
temp/
tmp/
*.tmp
*.temp

# Data files (adjust as needed)
data/
*.csv
*.json
*.xml
!example.json
!config.json

# Logs specific to your application
app.log
error.log
debug.log

# Configuration files with secrets
config.py
secrets.py
local_config.py

# Database files
*.db
*.sqlite
*.sqlite3

# Cache directories
cache/
.cache/

# Generated documentation
docs/build/
docs/generated/

# Test artifacts
test-results/
test-reports/

# Backup files
*.bak
*.backup

# ----------------
# Package Managers
# ----------------

# Poetry
poetry.lock

# Pipenv
Pipfile.lock

# Yarn
yarn.lock

# pnpm
pnpm-lock.yaml

# ----------------
# Monitoring & Profiling
# ----------------

# Profiling data
*.prof
*.profile

# Memory dumps
*.hprof
core.*

# ----------------
# Security
# ----------------

# API keys and secrets
.env.local
.env.development.local
.env.test.local
.env.production.local
secrets/
private/
.secrets

# SSL certificates
*.pem
*.key
*.crt
*.cert

# ----------------
# Docker
# ----------------

# Docker
docker-compose.override.yml
.dockerignore

# ----------------
# CI/CD
# ----------------

# GitHub Actions
# Uncomment if you want to ignore workflow artifacts
# .github/workflows/

# CircleCI
.circleci/

# ----------------
# Misc
# ----------------

# Archives
*.zip
*.tar.gz
*.rar
*.7z

# Large files that shouldn't be in git
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.webm

# Add your specific file patterns here
# Example: ignore all files with certain extensions in specific directories
# src/**/*.generated.js
# api/**/*.m